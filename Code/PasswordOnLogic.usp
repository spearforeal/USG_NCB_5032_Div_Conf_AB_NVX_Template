#symbol_name "PasswordOnLogic_v0"
#default_volatile
#enable_trace
#define_constant pulseLength 50

digital_input _skip_;
digital_input start;
digital_input back;
digital_input password_correct;
digital_input EnablePasswordOnStart;
digital_input mode[7];
digital_input enable_password_on_mode[7];//these are 7 inputs not just one array.

digital_output _skip_;
digital_output password_page_start_fb;
digital_output password_page_fb;
digital_output pass_start;
digital_output pass_mode[7];//these are 7 outputs not just one array.

integer pendingType;
integer pendingIndex;
function ShowStartPage()
{
	pendingType = 1;
	pendingIndex = 0;
	password_page_start_fb = 1;
	password_page_fb = 0;
}
function ShowModePage(integer idx)
{
	pendingType = 2;
	pendingIndex = idx;
	password_page_start_fb = 0;
	password_page_fb = 1;
	
}
function ShowPasswordPage(integer type, integer idx)
{
	pendingType = type;
	pendingIndex = idx;
	password_page_fb = 1;
}
function ClearPages()
{
	password_page_fb = 0;
	password_page_start_fb = 0;
	pendingType = 0;
	pendingIndex = 0;
}
function ActionPress()
{
	if(pendingType = 1)
	{
		pulse(pulseLength, pass_start);
	}
	else if (pendingType = 2)
	{
		if((pendingIndex >=1) && (pendingIndex <= 7))
		{
			pulse(pulseLength, pass_mode[pendingIndex]);
		}
	}
	ClearPages();
}
push start
{
	if(EnablePasswordOnStart)
	{
		ShowStartPage();
	}
	else
	{
		pulse(pulseLength, pass_start);
		
	}
}

push mode
{
	integer n;
	n = GetLastModifiedArrayIndex();
	if(enable_password_on_mode[n])
	{
		ShowModePage(n);
	}
	else
	{
		pulse(pulseLength, pass_mode[n]);
		
	}
}
push back
{
	if(password_page_fb || password_page_start_fb)
	{
		ClearPages();
	}
}
push password_correct
{
	if(password_page_fb || password_page_start_fb)
	{
		ActionPress();
	}
}
