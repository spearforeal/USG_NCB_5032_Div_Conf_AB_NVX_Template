#symbol_name "RoomCombiner_v0"
#default_volatile
#enable_trace
#define_constant pulseLength 50
digital_input _skip_;
digital_input Separate, Combine;
digital_input Room_A_Start;
digital_input Room_B_Start;
digital_input Room_A_Shutdown;
digital_input Room_B_Shutdown;
digital_output _skip_;
digital_output Separated_fb;
digital_output Combined_fb;
digital_output Room_A_Start_pulse;
digital_output Room_B_Start_pulse;
digital_output Room_A_Shutdown_pulse;
digital_output Room_B_Shutdown_pulse;

integer mode;

function SetRoomMode()
{
	if(mode = 1)
	{
		Combined_fb = 1;
		Separated_fb = 0;
	}
	else
	{
		Combined_fb = 0;
		Separated_fb = 1;
	}
	
}



push Separate
{
	mode = 0;
	SetRoomMode();
}
push Combine
{
	mode = 1;
	SetRoomMode();
}

push Room_A_Start
{
	if(mode = 1)
	{
		pulse(pulseLength, Room_A_Start_pulse);
		pulse(pulseLength, Room_B_Start_pulse);
		
	}
	else{
		pulse(pulseLength, Room_A_Start_pulse);
	}
	
}

push Room_B_Start
{
	if(mode = 1)
	{
		pulse(pulseLength, Room_A_Start_pulse);
		pulse(pulseLength, Room_B_Start_pulse);
		
	}
	else{
		pulse(pulseLength, Room_B_Start_pulse);
	}
	
}
push Room_B_Shutdown
{
	if(mode = 1)
	{
		pulse(pulseLength, Room_A_Shutdown_pulse);
		pulse(pulseLength, Room_B_Shutdown_pulse);
		
	}
	else{
		pulse(pulseLength, Room_B_Shutdown_pulse);
	}
	
}
push Room_A_Shutdown
{
	if(mode = 1)
	{
		pulse(pulseLength, Room_A_Shutdown_pulse);
		pulse(pulseLength, Room_B_Shutdown_pulse);
		
	}
	else{
		pulse(pulseLength, Room_A_Shutdown_pulse);
	}
	
}
function Main()
{
	WaitForInitializationComplete();
	mode = 0;
	SetRoomMode();
}